package com.luv2code.springboot.cruddemo.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import org.hibernate.Session;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.luv2code.springboot.cruddemo.entity.Employee;

@Repository
public class EmployeeDAOImpl implements EmployeeDAO {

	 private EntityManager entityManager;
	    
	 @Autowired
	 public EmployeeDAOImpl(EntityManager theentityManager) {
		entityManager = theentityManager;
	}
	@Override
	public List<Employee> findAll() {
        Query theQuery = entityManager.createQuery("from Employee");
        
        List<Employee> employees = theQuery.getResultList();
        
        return employees;
	}

	@Override
	public Employee findById(int theId) {
	        
	        Employee theEmployee = entityManager.find(Employee.class, theId);
	        
			return theEmployee;
	}

	@Override
	public void save(Employee theEmployee) {

		// save or update the employee
        Employee dbEmployee = entityManager.merge(theEmployee);
        
        // update with id from db ... so we can get generated id for save/insert
        theEmployee.setId(dbEmployee.getId());
	}

	
	@Override
	public void deleteById(int theId) {
		 Session currentSession = entityManager.unwrap(Session.class);

			// delete object with primary key
			Query theQuery = currentSession.createQuery("delete from Employee where id=:employeeId");
			theQuery.setParameter("employeeId", theId);
			theQuery.executeUpdate();
		
	}

}
